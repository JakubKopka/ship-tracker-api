## Every this time - api will generate new token to barentswatch API
cron.for.token.generator=${CRON_FOR_TOKEN_GENERATOR}
#
##Set of incorrect names which positionstack finding wrong position
list.of.invalid.strings = ${LIST_OF_INVALID_STRINGS}
#
##Barentswatch API settings
## web: https://www.barentswatch.no/
api.barentswatch.token.url=${API_BARENTSWATCH_TOKEN_URL}
api.barentswatch.base.url=${API_BARENTSWATCH_BASE_URL}
api.barentswatch.client.id=${API_BARENTSWATCH_CLIENT_ID}
api.barentswatch.client.secret=${API_BARENTSWATCH_CLIENT_SECRET}
api.barentswatch.client.x.max = ${API_BARENTSWATCH_CLIENT_X_MAX}
api.barentswatch.client.x.min = ${API_BARENTSWATCH_CLIENT_X_MIN}
api.barentswatch.client.y.max = ${API_BARENTSWATCH_CLIENT_Y_MAX}
api.barentswatch.client.y.min = ${API_BARENTSWATCH_CLIENT_Y_MIN}
#
##Positionstack API settings
## web: https://positionstack.com/
api.positionstack.accessKey=${API_POSITIONSTACK_ACCESSKEY}
api.positionstack.url=${API_POSITIONSTACK_URL}
#
## Database Properties
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
#
## Hibernate Properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL92Dialect
#
## Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}
#
